function bases = mbaseGen(center,radius,res)
% MBASEGEN would generate Gaussian mask(s) as mask base(s) of
% transformation-mask model
%
% BASES = MBASEGEN(CENTER,RADIU,RES=256) generate Gaussian mask(s) centered 
%   at CENTER, which is a row vector with two elements correspoinding to X 
%   and Y coordinates in the area of [-1,1]. The RADIUS corresponds to the 
%   sigma in Gaussian distribution function, which control the area it 
%   covered. RES is a scalar value, which represent the number of pixels in 
%   both X and Y direction. The Gaussian mask generated by this function is 
%   normalized its maximum pixel value to 1. And both CENTER and RADIUS can 
%   be a set of values. All combination between them would produce a 
%   corresponding mask base. Argument RES is set to 256 by default.
%
%   see also tbaseGen.
%
% MooGu Z. <hzhu@case.edu>
% Apr 30, 2015

% check input arguments
assert(size(center,2) == 2, ...
    'center (1st input argument) should be row vector(s) with 2 elements.');

% set default values
if ~exist('res','var'), res = 256; end
if numel(res) == 1, res = [res, res]; end

% calculate number of base function
nbase = size(center,1) * numel(radius);

% initialize bases
bases = zeros([res,nbase]);
% calculate coordinates
[X,Y] = meshgrid(linspace(-1,1,res(2)),linspace(1,-1,res(1)));
% generate base function one by one
for i = 1 : numel(radius)
    % calculate sigma for Gaussian function
    sigma = radius(i);
    for j = 1 : size(center,1)
        % generate mask base
        buffer = exp(-((X - center(j,1)).^2 + (Y - center(j,2)).^2) ...
            / (2*sigma^2));
        bases(:,:,j) = buffer / max(buffer(:));
    end
end

end